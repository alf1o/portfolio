// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`\`About\` should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <About
    classes={
        Object {
            "container": Object {},
            "img": Object {},
            "imgContainer": Object {},
            "text": Object {},
            "textContainer": Object {},
          }
    }
    text="Example
 text"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(Paper)
          className={Object {}}
          elevation={0}
>
          <WithStyles(Avatar)
                    alt="Alfio's profile picture"
                    className={Object {}}
                    src="profile_pic-min.jpg"
          />
          <WithStyles(Typography)
                    variant="caption"
          >
                    Alfio Parisi
          </WithStyles(Typography)>
          <WithStyles(Typography)
                    variant="caption"
          >
                    London, UK
          </WithStyles(Typography)>
</WithStyles(Paper)>,
        <WithStyles(Paper)
          className={Object {}}
          elevation={0}
>
          <WithStyles(Typography)
                    className={Object {}}
                    component="p"
          >
                    Example
          </WithStyles(Typography)>
          <WithStyles(Typography)
                    className={Object {}}
                    component="p"
          >
                     text
          </WithStyles(Typography)>
</WithStyles(Paper)>,
      ],
      "className": Object {},
      "elevation": 0,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Avatar)
              alt="Alfio's profile picture"
              className={Object {}}
              src="profile_pic-min.jpg"
/>,
            <WithStyles(Typography)
              variant="caption"
>
              Alfio Parisi
</WithStyles(Typography)>,
            <WithStyles(Typography)
              variant="caption"
>
              London, UK
</WithStyles(Typography)>,
          ],
          "className": Object {},
          "elevation": 0,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "alt": "Alfio's profile picture",
              "className": Object {},
              "src": "profile_pic-min.jpg",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Alfio Parisi",
              "variant": "caption",
            },
            "ref": null,
            "rendered": "Alfio Parisi",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "London, UK",
              "variant": "caption",
            },
            "ref": null,
            "rendered": "London, UK",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className={Object {}}
              component="p"
>
              Example
</WithStyles(Typography)>,
            <WithStyles(Typography)
              className={Object {}}
              component="p"
>
               text
</WithStyles(Typography)>,
          ],
          "className": Object {},
          "elevation": 0,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "class",
            "props": Object {
              "children": "Example",
              "className": Object {},
              "component": "p",
            },
            "ref": null,
            "rendered": "Example",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "children": " text",
              "className": Object {},
              "component": "p",
            },
            "ref": null,
            "rendered": " text",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Paper)
            className={Object {}}
            elevation={0}
>
            <WithStyles(Avatar)
                        alt="Alfio's profile picture"
                        className={Object {}}
                        src="profile_pic-min.jpg"
            />
            <WithStyles(Typography)
                        variant="caption"
            >
                        Alfio Parisi
            </WithStyles(Typography)>
            <WithStyles(Typography)
                        variant="caption"
            >
                        London, UK
            </WithStyles(Typography)>
</WithStyles(Paper)>,
          <WithStyles(Paper)
            className={Object {}}
            elevation={0}
>
            <WithStyles(Typography)
                        className={Object {}}
                        component="p"
            >
                        Example
            </WithStyles(Typography)>
            <WithStyles(Typography)
                        className={Object {}}
                        component="p"
            >
                         text
            </WithStyles(Typography)>
</WithStyles(Paper)>,
        ],
        "className": Object {},
        "elevation": 0,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Avatar)
                alt="Alfio's profile picture"
                className={Object {}}
                src="profile_pic-min.jpg"
/>,
              <WithStyles(Typography)
                variant="caption"
>
                Alfio Parisi
</WithStyles(Typography)>,
              <WithStyles(Typography)
                variant="caption"
>
                London, UK
</WithStyles(Typography)>,
            ],
            "className": Object {},
            "elevation": 0,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "alt": "Alfio's profile picture",
                "className": Object {},
                "src": "profile_pic-min.jpg",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Alfio Parisi",
                "variant": "caption",
              },
              "ref": null,
              "rendered": "Alfio Parisi",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "London, UK",
                "variant": "caption",
              },
              "ref": null,
              "rendered": "London, UK",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className={Object {}}
                component="p"
>
                Example
</WithStyles(Typography)>,
              <WithStyles(Typography)
                className={Object {}}
                component="p"
>
                 text
</WithStyles(Typography)>,
            ],
            "className": Object {},
            "elevation": 0,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "class",
              "props": Object {
                "children": "Example",
                "className": Object {},
                "component": "p",
              },
              "ref": null,
              "rendered": "Example",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "children": " text",
                "className": Object {},
                "component": "p",
              },
              "ref": null,
              "rendered": " text",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {},
  },
}
`;
