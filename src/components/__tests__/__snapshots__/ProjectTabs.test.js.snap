// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`\`ProjectTabs\` should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProjectTabs
    classes={
        Object {
            "tabs": "",
          }
    }
    match={
        Object {
            "match": Object {
              "url": "test.com",
            },
          }
    }
    projects={
        Array [
            Object {
              "name": "hello",
            },
            Object {
              "name": "world",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(Tabs)
        className=""
        indicatorColor="primary"
        onChange={[Function]}
        scrollable={true}
        textColor="primary"
        value={0}
>
        <WithStyles(Tab)
                component={[Function]}
                label="hello"
                to="test.com/hello"
        />
        <WithStyles(Tab)
                component={[Function]}
                label="world"
                to="test.com/world"
        />
</WithStyles(Tabs)>,
      "position": "static",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Tab)
            component={[Function]}
            label="hello"
            to="test.com/hello"
/>,
          <WithStyles(Tab)
            component={[Function]}
            label="world"
            to="test.com/world"
/>,
        ],
        "className": "",
        "indicatorColor": "primary",
        "onChange": [Function],
        "scrollable": true,
        "textColor": "primary",
        "value": 0,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "hello",
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": "hello",
            "to": "test.com/hello",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "world",
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "label": "world",
            "to": "test.com/world",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Tabs)
          className=""
          indicatorColor="primary"
          onChange={[Function]}
          scrollable={true}
          textColor="primary"
          value={0}
>
          <WithStyles(Tab)
                    component={[Function]}
                    label="hello"
                    to="test.com/hello"
          />
          <WithStyles(Tab)
                    component={[Function]}
                    label="world"
                    to="test.com/world"
          />
</WithStyles(Tabs)>,
        "position": "static",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Tab)
              component={[Function]}
              label="hello"
              to="test.com/hello"
/>,
            <WithStyles(Tab)
              component={[Function]}
              label="world"
              to="test.com/world"
/>,
          ],
          "className": "",
          "indicatorColor": "primary",
          "onChange": [Function],
          "scrollable": true,
          "textColor": "primary",
          "value": 0,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "hello",
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "hello",
              "to": "test.com/hello",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "world",
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "world",
              "to": "test.com/world",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {},
  },
}
`;
